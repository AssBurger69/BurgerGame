# -*- coding: utf-8 -*-

from telebot import TeleBot
from telebot import types
import random
import Characters
import Drop
import Locations
import MyStrings
import BotMessages
import Fight
bot = TeleBot('')

def bleeding(message):
   #–∫—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µ
   if char.bleeding == True and char.immunity == False:
      char.hp_debaff(100)
      bot.send_message(message.from_user.id, 'ü©∏–ö—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µü©∏\n' + char.icon + '-100‚ù§Ô∏è')

   elif boss.bleeding == True:
      boss.hp_debaff(100)
      bot.send_message(message.from_user.id, 'ü©∏–ö—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µü©∏\n' + boss.icon + '-100üñ§')

def poison(message):
   #—è–¥
   if char.poison == True and char.immunity == False:
      char.hp -= char.hp * parameters.poison_dmg // 100
      bot.send_message(message.from_user.id, 'ü¶†–û—Ç—Ä–∞–≤–ª–µ–Ω–∏–µü¶†\n-' + str(parameters.poison_dmg) + '%‚ù§Ô∏è')
      parameters.poison_dmg += 10
   if boss.poison == True:
      boss.hp -= boss.hp * parameters.poison_dmg // 100
      bot.send_message(message.from_user.id, 'ü¶†–û—Ç—Ä–∞–≤–ª–µ–Ω–∏–µü¶†\n-' + str(parameters.poison_dmg) + '%üñ§')
      parameters.poison_dmg += 10

def regeneration(message):
   if char.regen > 0:
      char.hp_baff(char.regen)
      bot.send_message(message.from_user.id, 'üíï–†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—èüíï\n' + char.icon + '+' + str(char.regen) + '‚ù§Ô∏è')
   if boss.regen > 0:
      boss.hp_baff(boss.regen)
      bot.send_message(message.from_user.id, 'üíï–†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—èüíï\n' + boss.icon + '+' + str(boss.regen) + 'üñ§')

@bot.message_handler(content_types=['text'])

def get_character(message):
   # –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
   bot.send_message(message.from_user.id, MyStrings.Text.hello_text.value)
   
   # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ –≥–µ—Ä–æ–µ–≤
   keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True)
   keyboard.add(MyStrings.Text.mitya_name.value, MyStrings.Text.sanya_name.value, MyStrings.Text.toshik_name.value, MyStrings.Text.kolya_name.value, MyStrings.Text.temich_name.value)
   msg = bot.send_message(message.from_user.id, text = MyStrings.Text.char_choice_text.value, reply_markup=keyboard)
   bot.register_next_step_handler(msg, char_creation)

def char_creation(message):
   # –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –≥–µ—Ä–æ—é
   Characters.char_get_stats(message.text)

   # —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –≥–µ—Ä–æ—è
   bot.send_message(message.from_user.id, BotMessages.Message_text.char_description_message())

   # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –≤—ã–±–æ—Ä–∞ –≥–µ—Ä–æ—è
   keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True)
   keyboard.add(MyStrings.Text.ready_key_text.value, MyStrings.Text.another_char_key_text.value)
   msg = bot.send_message(message.from_user.id, text = MyStrings.Text.char_choice_question.value, reply_markup=keyboard)
   bot.register_next_step_handler(msg, shop_choice)

def shop_choice(message):
   # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –µ—Å–ª–∏ –≥–µ—Ä–æ–π –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –∏–≥—Ä–æ–∫–æ–º
   if message.text == MyStrings.Text.another_char_key_text.value:
      bot.send_message(message.from_user.id, MyStrings.Text.give_answer_text.value)
      bot.register_next_step_handler(message, get_character)
   
   # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤—ã–±–æ—Ä–æ–º –º–∞–≥–∞–∑–∏–Ω–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –≥–µ—Ä–æ—è –∏–ª–∏ –ø–æ–±–µ–¥–µ –≤ –±–æ—é
   elif message.text == MyStrings.Text.ready_key_text.value or MyStrings.Text.victory_button_text.value:
      keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True)
      keyboard.add(MyStrings.Text.stas_shop_name.value, MyStrings.Text.bratishki_shop_name.value)
      msg = bot.send_message(message.from_user.id, text = MyStrings.Text.shop_choice_text.value, reply_markup=keyboard)
      bot.register_next_step_handler(msg, shop)

def shop(message):
   # –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤ –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–∞ –∏–≥—Ä–æ–∫–∞
   Drop.shop_enter(message.text)

   # –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
   if message.text == MyStrings.Text.stas_shop_name.value:
      bot.send_message(message.from_user.id, MyStrings.Text.stas_shop_description.value)
      keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True)
      keyboard.add(Drop.item_choice[0], Drop.item_choice[1], Drop.item_choice[2])
      msg = bot.send_message(message.from_user.id, text = MyStrings.Text.item_choice_text.value, reply_markup=keyboard)
      bot.register_next_step_handler(msg, items_upgrade)

   elif message.text == MyStrings.Text.bratishki_shop_name.value:
      bot.send_message(message.from_user.id, MyStrings.Text.bratishki_shop_description.value)
      keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True)
      keyboard.add(Drop.buff_choice[0], Drop.buff_choice[1], Drop.buff_choice[2])
      msg = bot.send_message(message.from_user.id, text = MyStrings.Text.item_choice_text.value, reply_markup=keyboard)
      bot.register_next_step_handler(msg, stats_upgrade)

def items_upgrade(message):
   # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–≥—Ä–æ–∫–∞ –µ—Å–ª–∏ –æ–Ω –ø–æ—à–µ–ª –∫ –°—Ç–∞—Å—É
   Drop.stas_enter(message.text)
   
   # –∫–ª–∞–≤–∏—Ç—É—Ä–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º –±–æ—Å—Å–∞
   keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True)
   keyboard.add(MyStrings.Text.boss_choice_question.value)
   msg = bot.send_message(message.from_user.id, text = MyStrings.Text.stas_bye_text.value, reply_markup=keyboard)
   bot.register_next_step_handler(msg, boss_choice)

def stats_upgrade(message):
   # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–æ–≤ –∏–≥—Ä–æ–∫–∞ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –µ—Å–ª–∏ –æ–Ω –ø–æ—à–µ–ª –∫ –ë—Ä–∞—Ç–∏—à–∫–∞–º
   Drop.bratishki_enter(message.text)

   # —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–µ–¥–º–µ—Ç–∞
   bot.send_message(message.from_user.id, Drop.buff.description)

   # –∫–ª–∞–≤–∏—Ç—É—Ä–∞ —Å –≤—ã–≤–æ–¥–æ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏–≥—Ä–æ–∫–∞ –∏ –∑–∞–ø—Ä–æ—Å–æ–º –±–æ—Å—Å–∞
   keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True)
   keyboard.add(MyStrings.Text.boss_choice_question.value)
   msg = bot.send_message(message.from_user.id, text = BotMessages.Message_text.char_stats_message(), reply_markup=keyboard)
   bot.register_next_step_handler(msg, boss_choice)

def boss_choice(message):
   # –≤—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Å—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–±–µ–¥
   Characters.boss_difficult_choice(Characters.Char.win_rate)

   # –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –±–æ—Å—Å—É
   Characters.boss_get_stats(Characters.boss_name)

   # –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Ä–æ–∑—ã—Å–∫–µ –ª–∏ –∏–≥—Ä–æ–∫, –ø—Ä–∏–º–∏–Ω–µ–Ω–∏–µ —Å–≤–π–æ—Å—Ç–≤ –µ—Å–ª–∏ –¥–∞
   if Characters.char.wanted_level == True:
      Characters.boss.resurrection = True
      bot.send_message(message.from_user.id, MyStrings.Text.boss_police_upgrade_text.value)

   # –ø—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏–≥—Ä–æ–∫ –°–∞—à–µ–π –®–ª—è–∫–∏–Ω—ã–º –ø—Ä–∏ –±–∏—Ç–≤–µ —Å –°–∞—à–µ–π –®–ª—è–∫–∏–Ω—ã–º, —Å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º –µ—Å–ª–∏ –¥–∞
   if Characters.boss.name == MyStrings.Text.sasha_name.value and Characters.char.name != MyStrings.Text.sanya_name.value:
      bot.send_message(message.from_user.id, MyStrings.Text.sasha_bye_text.value)
      boss_choice(message)

   # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤—ã–≤–æ–¥–æ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –±–æ—Å—Å–∞ –∏ –∑–∞–ø—Ä–æ—Å–æ–º –ª–æ–∫–∞—Ü–∏–∏
   else:
      keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True)
      keyboard.add(MyStrings.Text.location_choice_question.value)
      msg = bot.send_message(message.from_user.id, text = BotMessages.Message_text.boss_stats_message(), reply_markup=keyboard)
      bot.register_next_step_handler(msg, location)

def location(message):
   # —Å–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –ª–æ–∫–∞—Ü–∏–∏ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –µ–µ —Å–≤–æ–π—Å—Ç–≤
   Locations.location_choice(Locations.Location.location_name)

   # –æ–ø–∏—Å–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–µ–π –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
   bot.send_message(message.from_user.id, BotMessages.Message_text.location_description_message())
   if Locations.Location.pers_iteraction_message != False:
      bot.send_message(message.from_user.id, Locations.Location.pers_iteraction_message)

   # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤—ã–≤–æ–¥–æ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏–≥—Ä–æ–∫–∞ –∏ –∑–∞–ø—Ä–æ—Å–æ–º –±–æ—è
   keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True)
   keyboard.add(MyStrings.Text.get_fight_button_text.value)
   msg = bot.send_message(message.from_user.id, text = BotMessages.Message_text.char_stats_message(), reply_markup=keyboard)
   bot.register_next_step_handler(msg, start_fight)

def start_fight(message):
   # –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Å—Å–∞ –ø–µ—Ä–µ–¥ –±–æ–µ–º –∏ –≤—ã–≤–æ–¥ –µ–µ –æ–ø–∏—Å–∞–Ω–∏—è
   Characters.boss_prelude_skill_activation(Characters.boss.name)
   if Characters.prelude_skill_message != False:
      bot.send_message(message.from_user.id, Characters.prelude_skill_message)

   # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω–æ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Å—Å–∞ –∏ –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–æ—Ü–µ–Ω—Ç–æ–º –µ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
   if Characters.boss.name == MyStrings.Text.sledovatel_name.value or Characters.boss.name == MyStrings.Text.dron_name.value:
      bot.send_message(message.from_user.id, text = BotMessages.Message_text.boss_skill_meter_message())

   # –≤—ã–≤–æ–¥ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏–≥—Ä–æ–∫–∞ –∏ –±–æ—Å—Å–∞
   bot.send_message(message.from_user.id, BotMessages.Message_text.versus_stats(Characters.char.name, Characters.boss.name))

   # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏–π –∏–≥—Ä–æ–∫–∞
   keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True)
   keyboard.add(MyStrings.Text.attack_button_text.value, Characters.char.skill_name, Characters.char.item)
   msg = bot.send_message(message.from_user.id, text = MyStrings.Text.start_turn_text.value, reply_markup=keyboard)
   bot.register_next_step_handler(msg, action_choice)

def action_choice(message):
   #–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–æ–º –¥–µ–π—Å—Ç–≤–∏—è

   if message.text == MyStrings.Text.attack_button_text.value:
      Fight.attack()

   elif message.text == char.skill_name:
      if char.cooldown <= 0 and char.silence == False and char.stan_timer <= 0:
         char.cooldown = 0
         skill(char.name)
         bot.send_message(message.from_user.id, skill_description)
      elif char.stan_timer > 0:
         bot.send_message(message.from_user.id, MyStrings.Text.char_stan_text.value)
      elif char.silence == True:
         bot.send_message(message.from_user.id, MyStrings.Text.char_silence_text.value)
      elif char.cooldown > 0:
         bot.send_message(message.from_user.id, MyStrings.Text.cooldown_text.value)
      victory_check(message)

   elif message.text == char.item:
      if char.item != MyStrings.Text.empty_text.value and char.silence == False and char.stan_timer <= 0:
         item_using(char.item)
         char.item = MyStrings.Text.empty_text.value
         bot.send_message(message.from_user.id, item_dscr)
      elif char.stan_timer > 0:
         bot.send_message(message.from_user.id, MyStrings.Text.char_stan_text.value)
      elif char.item != MyStrings.Text.empty_text.value and char.silence == True:
         bot.send_message(message.from_user.id, MyStrings.Text.char_silence_text.value)
      elif char.item == MyStrings.Text.empty_text.value:
         bot.send_message(message.from_user.id, MyStrings.Text.empty_click_text.value)   
      victory_check(message)
      
def skill(x):
   #–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∫–∏–ª–ª–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
   global skill_description

   if x == MyStrings.Text.mitya_name.value:
      char.hp_debaff(100)
      char.dmg_baff(200)
      char.cooldown = 1
      char.elex_count += 1
      skill_description = MyStrings.Text.mitya_skill_effect_text.value

   elif x == MyStrings.Text.sanya_name.value:
      damage = random.randint(50, 500)
      boss.hp_debaff(damage)
      char.cooldown = 3
      skill_description = boss.icon + '-' + str(damage) + MyStrings.Text.sanya_skill_effect_text.value

   elif x == MyStrings.Text.toshik_name.value:
      char.hp += char.hp * 20 // 100
      char.cooldown = 2
      skill_description = MyStrings.Text.toshik_skill_effect_text.value

   elif x == MyStrings.Text.kolya_name.value:
      hack_value = boss.dmg * 50 // 100
      char.dmg += hack_value
      boss.dmg -= hack_value
      char.cooldown = 3
      skill_description = boss.icon + '-' + str(hack_value) + '‚öîÔ∏è\n' + char.icon + '+' + str(hack_value) + MyStrings.Text.kolya_skill_effect_text.value

   elif x == MyStrings.Text.temich_name.value:
      skill_check_temich = chance(21)
      if skill_check_temich == False:
         boss.hp, char.hp = char.hp, boss.hp
         char.cooldown = 1
         skill_description = MyStrings.Text.temich_skill_effect_text.value
      elif skill_check_temich == True:
         char.stan_timer = 1
         skill_description = MyStrings.Text.temich_skill_deffect_text.value + char.icon + '+üí§'

def item_using(x):
   #–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
   x = False

def victory_check(message):
   #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–±–µ–¥—É –≤ —Ä–∞—É–Ω–¥–µ

   if boss.hp > 0 and char.hp > 0:
      start_fight(message)

   elif boss.hp <= 0 and char.hp > 0 and boss.name == MyStrings.Text.makar_name.value:
      keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True)
      keyboard.add(MyStrings.Text.restart_button_text.value)
      msg = bot.send_message(message.from_user.id, text = MyStrings.Text.victory_game_text.value, reply_markup=keyboard)
      bot.register_next_step_handler(msg, get_character)

   elif boss.hp <= 0 and char.hp > 0 and boss.name != MyStrings.Text.makar_name.value:
      next_fight(message)

   elif char.hp <= 0: 
      bot.send_message(message.from_user.id, MyStrings.Text.game_over_text.value)

def next_fight(message):
   #–∫–æ–Ω–µ—Ü –±–æ—è –ø–æ—Å–ª–µ –ø–æ–±–µ–¥—ã

   char.cooldown = 0
   parameters.win_rate += 1
   char.poison = False
   char.bleeding = False
   char.silence = False
   parameters.poison_dmg = 5
   char.busted_level = 0

   if parameters.win_rate < 8 and boss.name == MyStrings.Text.sanya_name.value:
      char.hp += char.hp * 20 // 100
      char.dmg += char.dmg * 20 // 100
      char.crit_baff(5)
      bot.send_message(message.from_user.id, MyStrings.Text.sanya_sasha_text.value)

   elif parameters.win_rate < 8 and char.name == MyStrings.Text.toshik_name.value:
      char.dmg += char.hp * 5 // 100
      bot.send_message(message.from_user.id, MyStrings.Text.toshik_passive_text.value)

   keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True)
   keyboard.add(MyStrings.Text.victory_button_text.value)
   msg = bot.send_message(message.from_user.id, text = MyStrings.Text.victory_fight_text.value, reply_markup=keyboard)
   bot.register_next_step_handler(msg, shop_choice)

bot.polling(none_stop=True, interval=0)